name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository to GitHub runner
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

#      # Login to Docker Hub
#      - name: Docker Hub Login
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}

#      # Build and push Docker image
#      - name: Build & Push Docker Image
#        run: |
#          IMAGE_NAME=myapp
#          docker build -t $IMAGE_NAME:latest .
#          docker tag $IMAGE_NAME:latest ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest
#          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest

      # Deploy to remote server
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 22
          script: |
            echo "Pruning existing Docker images..."
            docker system prune -af

            echo "Cloning repo..."
            if [ -d ~/myapp ]; then
              cd ~/myapp
              git reset --hard
              git pull
            else
              git clone https://github.com/dinukamalitha/VRL_Institute.git
              cd ~/myapp
            fi

            echo "Writing environment variables..."
            cat <<EOF > .env
            NODE_ENV=${{ secrets.NODE_ENV }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            MONGO_URI=${{ secrets.MONGO_URI }}
            PORT=${{secrets.PORT}}
            EOF

            echo "Bringing up Docker Compose..."
            docker compose down
            docker compose up -d --build
